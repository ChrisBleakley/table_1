/*
===========================================================================================
||	Project:			Risk Game														||
||	Module:				COMP20050														||
||	Author(s):			Rory Buckley													||
||	Contact:			Rory.Buckley.89@gmail.com										||
||	Contact 2:			14745991@ucdconnect.ie											||
||	Description:		MapPanel class using JPanel										||
||	Version:			0.1																||
||																						||
===========================================================================================
 */

package GUI;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.Line2D;

import javax.swing.JPanel;

public class MapPanel extends JPanel {
	public MapPanel(Dimension panel_size){
		
		this.panel_size = panel_size;
		this.radius = 18;
		
		//Set size
		this.setPreferredSize(panel_size);
		
		//Initialise coordinates and links
		this.coords = new int[MapConstants.COUNTRY_COORD.length][2];
		this.link_matrix = MapConstants.ADJACENT;
		
		//Add the Countries
		this.countries_component = new Countries(this.radius, this.panel_size);
		this.add(countries_component);
	}
	
	@Override
	public void paintComponent(Graphics g){
		//Draw the Links with 2D graphics
		this.drawLinks(this.initialiseGFX2D(g));
		
	}
	
	private Graphics2D initialiseGFX2D(Graphics g){
		
		super.paintComponent(g);
		
		//Turn on 2D Graphics
		Graphics2D gfx2d = (Graphics2D)g;
		
		//Initialise Anti-Aliasing
		gfx2d.setRenderingHint(
				RenderingHints.KEY_ANTIALIASING,
				RenderingHints.VALUE_ANTIALIAS_ON);
		
		return gfx2d;
	}
	
	private void drawLinks(Graphics2D gfx2d){
		//Go through each country in the arrays
		for (int i = 0; i < coords.length; i++){
			
			//Initialise Country coordinates dependent on current screensize compared to the frame constants
			int x = (int)((coords[i][0] - radius) * (panel_size.getWidth()) / MapConstants.FRAME_WIDTH);
			int	y = (int)((coords[i][1] - radius) * (panel_size.getHeight()) / MapConstants.FRAME_HEIGHT);
			
			//Initialise links
			int[] links = this.link_matrix[i];
			
			//Inialise color
			gfx2d.setPaint(new Color(30,144,255));
			
			//Go through the link array and find the corresponding country to link to
			for (int j = 0; j < links.length; j++){
				
				int target_index = links[j];
				int target_x = (int)(this.coords[target_index][0] * (panel_size.getWidth()) / MapConstants.FRAME_WIDTH);
				int target_y = (int)(this.coords[target_index][1] * (panel_size.getHeight()) / MapConstants.FRAME_HEIGHT);
				
				if (target_index > j){
					
					Line2D.Double link = new Line2D.Double(
							x + this.radius, y + this.radius, target_x, target_y);
					
					gfx2d.draw(link);
				}
			}
		}
	}
	
	private Countries countries_component;
	private Dimension panel_size;
	private int[][] coords;
	private int radius;
	private int[][] link_matrix;
	private static final long serialVersionUID = 1L;
}