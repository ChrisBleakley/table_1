package GUI;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.Line2D;
import java.util.ArrayList;

import javax.swing.JComponent;

public class Links extends JComponent{
	public Links(Dimension panel_size, ArrayList<Country> countries, ArrayList<Army> armies){
		this.panel_size = panel_size;
		this.setPreferredSize(panel_size);
		this.countries = countries;
		this.armies = armies;
		this.setLayout(new FlowLayout());
	}
	@Override
	public void paintComponent(Graphics g){
		//Draw the Links with 2D graphics
		this.drawLinks(this.initialiseGFX2D(g));
		
	}
	private Graphics2D initialiseGFX2D(Graphics g){	
		super.paintComponent(g);
		//Turn on 2D Graphics
		Graphics2D gfx2d = (Graphics2D)g;
		//Initialise Anti-Aliasing
		gfx2d.setRenderingHint(
				RenderingHints.KEY_ANTIALIASING,
				RenderingHints.VALUE_ANTIALIAS_ON);
		return gfx2d;
	}
	private void drawLinks(Graphics2D gfx2d){
		for (Country country : countries){
			Integer x = country.getXCoords();
			Integer	y = country.getYCoords();
			for (Country othercountry : country.getAdjacentCountries()){
				Integer otherx = othercountry.getXCoords();
				Integer othery = othercountry.getYCoords();
				gfx2d.setPaint(determineColor(country, othercountry));
				gfx2d.draw(new Line2D.Double(x, y, otherx, othery));
			}
		}
	}
	private Color determineColor(Country country, Country othercountry){
		Color c = null;
		//Same continent?
		if (country.getContinentName().equals(othercountry.getContinentName())){
			c = country.getColor().brighter();
		}
		//Link between continents?
		else {
			c = new Color(0, 0, 0);
		}
		return c;
	}
	private ArrayList<Country> countries;
	private ArrayList<Army> armies;
	private Countries countriescomponent;
	private Armies armies;
	private Dimension panel_size;
	private static final long serialVersionUID = 1L;
}
